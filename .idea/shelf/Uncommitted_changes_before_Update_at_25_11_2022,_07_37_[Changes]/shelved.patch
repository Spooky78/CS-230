Index: CS-230/src/main/java/com/example/cs230/ViewManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cs230;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Scene;\nimport javafx.scene.effect.DropShadow;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.*;\nimport javafx.scene.text.Text;\nimport javafx.stage.Stage;\n\n/**\n * Responsible for the main menu window.\n * @author Everybody\n */\npublic class ViewManager {\n    private static final int WIDTH = 1000;\n    private static final int HEIGHT = 800;\n    private final BorderPane mainPane;\n    private final Scene mainScene;\n    private final Stage mainStage;\n    private static final String BACKGROUND_PATH = \"treesBackground.png\";\n    private static VBox buttonPane;\n    private static VBox logoPane;\n    private static StackPane subscenePane;\n    private MainMenuSubScene creditsSubScene;\n    private MainMenuSubScene helpSubScene;\n    private MainMenuSubScene scoreSubScene;\n    private MainMenuSubScene ninjaChooserSubScene;\n    private MainMenuSubScene sceneToHide;\n    private List<NinjaPicker> ninjaPickerList;\n    private Ninja chosenNinja;\n    private boolean isHidden = true;\n\n    /**\n     * Creates a main menu window.\n     */\n    public ViewManager() {\n        mainPane = new BorderPane();\n        mainScene = new Scene(mainPane, WIDTH, HEIGHT);\n        mainStage = new Stage();\n        mainStage.setScene(mainScene);\n        createSubScenes();\n        createBackground();\n        createLogo();\n        createMsgOfTheDay();\n        createButtons();\n\n    }\n\n    /**\n     * Creates the sub scenes for the main menu.\n     */\n    private void createSubScenes() {\n        subscenePane = new StackPane();\n        subscenePane.setPadding(new Insets(50));\n\n        creditsSubScene = new MainMenuSubScene();\n        helpSubScene = new MainMenuSubScene();\n        scoreSubScene = new MainMenuSubScene();;\n        ninjaChooserSubScene = new MainMenuSubScene();\n\n        mainPane.setCenter(subscenePane);\n        createPlayerCharacterChooserSubScene();\n        createHelpText();\n    }\n\n    /**\n     * Moves sub scene to new position. If off-screen move to on-screen. If on-screen moves\n     * off-screen.\n     */\n    private void addRemoveSubScene(MainMenuSubScene currentScene) {\n        if (isHidden) {\n            subscenePane.getChildren().add(currentScene.getPane());\n            isHidden = false;\n        } else {\n            subscenePane.getChildren().remove(currentScene.getPane());\n            isHidden = true;\n        }\n    }\n\n    /**\n     * If sub scene is hidden then move it.\n     * @param subScene The sub scene to be moved.\n     */\n    private void showSubScene(MainMenuSubScene subScene) {\n        if (sceneToHide != null) {\n            addRemoveSubScene(subScene);\n        }\n\n        addRemoveSubScene(subScene);\n        sceneToHide = subScene;\n    }\n\n\n    /**\n     * Creates the player character chooser.\n     */\n    private void createPlayerCharacterChooserSubScene() {\n        ninjaChooserSubScene.getPane().getChildren().add(createPlayerCharacterToChoose());\n        ninjaChooserSubScene.getPane().getChildren().add(createButtonToStart());\n    }\n\n    /**\n     * Creates the start button.\n     * @return The start button.\n     */\n    private MainMenuButton createButtonToStart() {\n        MainMenuButton startButton = new MainMenuButton(\"START\");\n\n        startButton.setOnAction(actionEvent -> {\n            if (chosenNinja != null) {\n                GameViewManager gameManager = new GameViewManager();\n                gameManager.createNewGame(mainStage, chosenNinja);\n            }\n        });\n\n        return startButton;\n    }\n\n    /**\n     * Creates the player character to choose.\n     * @return The HBox of the player character.\n     */\n    private HBox createPlayerCharacterToChoose() {\n        HBox ninjaPickerBox = new HBox();\n        ninjaPickerBox.setSpacing(20);\n        ninjaPickerList = new ArrayList<>();\n        for (Ninja ninja: Ninja.values()) {\n            NinjaPicker shipToPick = new NinjaPicker(ninja);\n            ninjaPickerList.add(shipToPick);\n            ninjaPickerBox.getChildren().add(shipToPick);\n            shipToPick.setOnMouseClicked(mouseEvent -> {\n                for (NinjaPicker ship1 : ninjaPickerList) {\n                    ship1.setIsBoxChosen(false);\n                }\n                shipToPick.setIsBoxChosen(true);\n                chosenNinja = shipToPick.getNinja();\n            });\n        }\n        ninjaPickerBox.setPadding(new Insets(50));\n        ninjaPickerBox.setAlignment(Pos.CENTER);\n        return ninjaPickerBox;\n    }\n\n    //TODO: format better & add instructions\n    //TODO: createCreditsText(){}\n    private void createHelpText(){\n        Text howToPlayTitle = new Text(\"How to play\");\n        HBox instructions = new HBox();\n        instructions.getChildren().add(howToPlayTitle);\n        helpSubScene.getPane().getChildren().add(instructions);\n    }\n\n\n    /**\n     * Gets main stage.\n     * @return The main stage.\n     */\n    public Stage getMainStage() {\n        return mainStage;\n    }\n\n    /**\n     * Creates all main menu buttons.\n     */\n    private void createButtons() {\n        buttonPane = new VBox();\n        buttonPane.setSpacing(20);\n        buttonPane.setAlignment(Pos.CENTER_LEFT);\n        buttonPane.setPadding(new Insets(0,20,20,60));\n        mainPane.setLeft(buttonPane);\n        createStartButton();\n        createScoreButton();\n        createHelpButton();\n        createCreditsButton();\n        createExitButton();\n    }\n\n    /**\n     * Creates the play button.\n     */\n    private void createStartButton() {\n        MainMenuButton startButton = new MainMenuButton(\"PLAY\");\n        buttonPane.getChildren().add(startButton);\n        startButton.setOnAction(actionEvent -> showSubScene(ninjaChooserSubScene));\n    }\n\n    /**\n     * Creates the score button.\n     */\n    private void createScoreButton() {\n        MainMenuButton scoreButton = new MainMenuButton(\"Scores\");\n        buttonPane.getChildren().add(scoreButton);\n        scoreButton.setOnAction(actionEvent -> showSubScene(scoreSubScene));\n    }\n\n    /**\n     * Creates the help button.\n     */\n    private void createHelpButton() {\n        MainMenuButton helpButton = new MainMenuButton(\"Help\");\n        buttonPane.getChildren().add(helpButton);\n        helpButton.setOnAction(actionEvent -> showSubScene(helpSubScene));\n    }\n\n    /**\n     * Creates the credits button.\n     */\n    private void createCreditsButton() {\n        MainMenuButton creditsButton = new MainMenuButton(\"Credits\");\n        buttonPane.getChildren().add(creditsButton);\n        creditsButton.setOnAction(actionEvent -> showSubScene(creditsSubScene));\n    }\n\n    /**\n     * Creates the exit button, that exits the application.\n     */\n    private void createExitButton() {\n        MainMenuButton exitButton = new MainMenuButton(\"Exit\");\n        buttonPane.getChildren().add(exitButton);\n        exitButton.setOnAction(actionEvent -> mainStage.close());\n    }\n\n    /**\n     * Sets the background to images.\n     */\n    private void createBackground() {\n        Image backgroundImage = new Image(BACKGROUND_PATH, WIDTH, HEIGHT, false, false);\n        BackgroundImage background = new BackgroundImage(backgroundImage, BackgroundRepeat.NO_REPEAT,\n            BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT, new BackgroundSize(100, 100,\n            true, true, true, true));\n        mainPane.setBackground(new Background(background));\n    }\n\n    /**\n     * Creates the game logo.\n     */\n    private void createLogo() {\n\n        ImageView logo = new ImageView(\"logo.png\");\n\n        logo.setOnMouseEntered(mouseEvent -> logo.setEffect(new DropShadow()));\n        logo.setOnMouseExited(mouseEvent -> logo.setEffect(null));\n\n        logoPane = new VBox();\n        logoPane.getChildren().add(logo);\n        logoPane.setAlignment(Pos.TOP_CENTER);\n        logoPane.setPadding(new Insets(30,0,0,0));\n        mainPane.setTop(logoPane);\n    }\n//TODO: format msg text.\n    private void createMsgOfTheDay() {\n        String msg;\n        MsgOfTheDay m = new MsgOfTheDay();\n        msg = m.getRequest();\n        Text msgOfTheDay = new Text(msg);\n\n        logoPane.getChildren().add(msgOfTheDay);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CS-230/src/main/java/com/example/cs230/ViewManager.java b/CS-230/src/main/java/com/example/cs230/ViewManager.java
--- a/CS-230/src/main/java/com/example/cs230/ViewManager.java	(revision b42408366c2be0db7e026be31d7af4b48bca9133)
+++ b/CS-230/src/main/java/com/example/cs230/ViewManager.java	(date 1669190024961)
@@ -5,6 +5,7 @@
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.Scene;
+import javafx.scene.control.Control;
 import javafx.scene.effect.DropShadow;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
Index: CS-230/src/main/java/com/example/cs230/MainMenuSubScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cs230;\n\nimport javafx.animation.TranslateTransition;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.SubScene;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.*;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\n/**\n * Responsible for the main menu sub scene.\n */\npublic class MainMenuSubScene {\n\n    private static final String BACKGROUND_IMAGE = \"paperPanel.png\";\n    private static final int PREF_WIDTH = 100;\n    private static final int PREF_HEIGHT = 100;\n    private boolean isHidden;\n    private VBox parentPane;\n\n    /**\n     * Creates a main menu sub scene off-screen to the right.\n     */\n    public MainMenuSubScene() {\n        parentPane = new VBox();\n        parentPane.setAlignment(Pos.CENTER);\n\n        parentPane.setPadding(new Insets(50));\n\n        Image image = new Image(BACKGROUND_IMAGE, PREF_WIDTH,\n            PREF_HEIGHT, false, false);\n        BackgroundImage background = new BackgroundImage(image, BackgroundRepeat.NO_REPEAT,\n            BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT,\n            new BackgroundSize(100,100,true,true,true,true));\n\n        parentPane.setBackground(new Background(background));\n\n        isHidden = true;\n    }\n\n    /**\n     * Gets the pane.\n     * @return Returns the pane.\n     */\n\n    public VBox getPane() {\n        return parentPane;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CS-230/src/main/java/com/example/cs230/MainMenuSubScene.java b/CS-230/src/main/java/com/example/cs230/MainMenuSubScene.java
--- a/CS-230/src/main/java/com/example/cs230/MainMenuSubScene.java	(revision b42408366c2be0db7e026be31d7af4b48bca9133)
+++ b/CS-230/src/main/java/com/example/cs230/MainMenuSubScene.java	(date 1669188827709)
@@ -16,7 +16,7 @@
 
     private static final String BACKGROUND_IMAGE = "paperPanel.png";
     private static final int PREF_WIDTH = 100;
-    private static final int PREF_HEIGHT = 100;
+    private static final int PREF_HEIGHT = 90;
     private boolean isHidden;
     private VBox parentPane;
 
Index: CS-230/src/main/java/com/example/cs230/MainMenuButton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cs230;\n\nimport javafx.scene.control.Button;\nimport javafx.scene.effect.DropShadow;\nimport javafx.scene.input.MouseButton;\nimport javafx.scene.text.Font;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.net.URISyntaxException;\n\n/**\n * Responsible for the button used on main menu.\n */\npublic class MainMenuButton extends Button {\n    private final String FONT_PATH;\n    {\n        try {\n            FONT_PATH = String.valueOf(new File(ClassLoader.getSystemResource(\n                \"kenvector_future.ttf\").toURI()));\n        } catch (URISyntaxException e) {\n            throw new RuntimeException(e);\n        }\n    }\n    private static final String BUTTON_FREE_PATH = \"paperButton.png\";\n    private static final String BUTTON_PRESSED_PATH = \"paperButtonPressed.png\";\n    private final String BUTTON_PRESSED_STYLE =\n        \"-fx-background-color: transparent; -fx-background-image: url('\"\n            + BUTTON_PRESSED_PATH + \"');\";\n    private final String BUTTON_FREE_STYLE =\n        \"-fx-background-color: transparent; -fx-background-image: url('\"\n            + BUTTON_FREE_PATH + \"');\";\n    private static final int PREF_WIDTH = 182;\n    private static final int PREF_HEIGHT = 45;\n    private static final int PRESSED_PREF_HEIGHT = 50;\n    private static final int PRESSED_HEIGHT_OFFSET = 5;\n    private static final int FONT_SIZE = 23;\n\n    /**\n     * Creates a main menu button.\n     * @param text the text that the button will display.\n     */\n    public MainMenuButton(String text) {\n        setText(text);\n        setButtonFont();\n        setPrefWidth(PREF_WIDTH);\n        setPrefHeight(PREF_HEIGHT);\n        setStyle(BUTTON_FREE_STYLE);\n        initializeButtonListener();\n    }\n\n    /**\n     * Sets the button text font & size.\n     */\n    private void setButtonFont() {\n        try {\n            setFont(Font.loadFont(new FileInputStream(FONT_PATH), FONT_SIZE));\n        } catch (FileNotFoundException e) {\n            setFont(Font.font(\"Verdana\", FONT_SIZE));\n        }\n    }\n\n    /**\n     * Sets button pressed style.\n     */\n    private void setButtonPressedStyle() {\n        setStyle(BUTTON_PRESSED_STYLE);\n        setPrefHeight(PRESSED_PREF_HEIGHT);\n        setLayoutY(getLayoutY() + PRESSED_HEIGHT_OFFSET);\n    }\n\n    /**\n     * Sets button released style.\n     */\n    private void setButtonReleasedStyle() {\n        setStyle(BUTTON_FREE_STYLE);\n        setPrefHeight(PREF_HEIGHT);\n        setLayoutY(getLayoutY() - PRESSED_HEIGHT_OFFSET);\n    }\n\n    /**\n     * Initializes button listeners. Listens for mouse events for button to be\n     * pressed and released.\n     */\n    private void initializeButtonListener() {\n\n        setOnMousePressed(mouseEvent -> {\n            if (mouseEvent.getButton().equals(MouseButton.PRIMARY)) {\n                setButtonPressedStyle();\n            }\n        });\n\n        setOnMouseReleased(mouseEvent -> {\n            if (mouseEvent.getButton().equals(MouseButton.PRIMARY)) {\n                setButtonReleasedStyle();\n            }\n        });\n\n        setOnMouseEntered(mouseEvent -> setEffect(new DropShadow()));\n\n        setOnMouseExited(mouseEvent -> setEffect(null));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CS-230/src/main/java/com/example/cs230/MainMenuButton.java b/CS-230/src/main/java/com/example/cs230/MainMenuButton.java
--- a/CS-230/src/main/java/com/example/cs230/MainMenuButton.java	(revision b42408366c2be0db7e026be31d7af4b48bca9133)
+++ b/CS-230/src/main/java/com/example/cs230/MainMenuButton.java	(date 1669189890695)
@@ -1,6 +1,8 @@
 package com.example.cs230;
 
+import javafx.geometry.Insets;
 import javafx.scene.control.Button;
+import javafx.scene.control.Control;
 import javafx.scene.effect.DropShadow;
 import javafx.scene.input.MouseButton;
 import javafx.scene.text.Font;
@@ -66,8 +68,8 @@
      */
     private void setButtonPressedStyle() {
         setStyle(BUTTON_PRESSED_STYLE);
-        setPrefHeight(PRESSED_PREF_HEIGHT);
-        setLayoutY(getLayoutY() + PRESSED_HEIGHT_OFFSET);
+        //setPrefHeight(PRESSED_PREF_HEIGHT);
+        //setLayoutY(getLayoutY() + PRESSED_HEIGHT_OFFSET);
     }
 
     /**
@@ -75,8 +77,8 @@
      */
     private void setButtonReleasedStyle() {
         setStyle(BUTTON_FREE_STYLE);
-        setPrefHeight(PREF_HEIGHT);
-        setLayoutY(getLayoutY() - PRESSED_HEIGHT_OFFSET);
+        //setPrefHeight(PREF_HEIGHT);
+        //setLayoutY(getLayoutY() - PRESSED_HEIGHT_OFFSET);
     }
 
     /**
